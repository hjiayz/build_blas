# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2.1.3
        id: cache
        with: 
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ./android-ndk-r22
          # An explicit key for restoring and saving the cache
          key: 1
      - name: init
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          wget -q https://dl.google.com/android/repository/android-ndk-r22-linux-x86_64.zip
          unzip android-ndk-r22-linux-x86_64.zip > /dev/null
      - name: build
        run: |
          export HOMEDIR=$PWD
          export Host=linux-x86_64
          export NDK=$HOMEDIR/android-ndk-r22
          export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/$Host
          export TARGET=aarch64-linux-android
          export CC_TARGET=aarch64-linux-android
          export API=29
          $NDK/build/tools/make_standalone_toolchain.py --arch arm64 --api ${API} --stl=libc++ --install-dir=${HOMEDIR}/toolchain/$TARGET
          ls ${HOMEDIR}/toolchain/$TARGET/bin
          export PATH=${HOMEDIR}/toolchain/$TARGET/bin:$PATH
          git clone https://github.com/xianyi/OpenBLAS.git
          cd OpenBLAS
          git checkout v0.3.13
          make TARGET=ARMV8 BINARY=64 HOSTCC=gcc CC=aarch64-linux-android-gcc FC=aarch64-linux-android-gfortran libs
          make install PREFIX=$HOMEDIR/zip/$TARGET
          make clean
          cd ..

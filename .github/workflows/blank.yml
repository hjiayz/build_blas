# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: build
        run: |
          gcc --version
          sudo apt install gfortran-9-aarch64-linux-gnu
          aarch64-linux-gnu-gfortran-9 --version
          export HOMEDIR=$PWD
          export Host=linux-x86_64
          export NDK=$HOMEDIR/android-ndk-r22
          export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/$Host
          export TARGET=aarch64-linux-android
          export CC_TARGET=aarch64-linux-android
          export AR=aarch64-linux-gnu-ar
          export AS=aarch64-linux-gnu-as
          export CC=aarch64-linux-gnu-gcc-9
          export CXX=aarch64-linux-gnu-cpp-9
          export LD=aarch64-linux-gnu-ld
          export RANLIB=aarch64-linux-gnu-ranlib
          export STRIP=aarch64-linux-gnu-strip
          export READELF=aarch64-linux-gnu-readelf
          git clone https://github.com/xianyi/OpenBLAS.git
          cd OpenBLAS
          git checkout v0.3.13
          make \
              TARGET=CORTEXA57 \
              FC="aarch64-linux-gnu-gfortran-9" \
              HOSTCC=gcc \
              NO_SHARED=1 \
              -j4
          export CC_TARGET=
          export AR=
          export AS=
          export CC=
          export CXX=
          export LD=
          export RANLIB=
          export STRIP=
          export READELF=
          make install PREFIX=$HOMEDIR/zip/$TARGET || true
          make clean || true
          cd ..
      - name: Build zip file
        run: |
          cd zip
          zip -r ../openblas.zip *
          cd ..
      - name: Upload Release Asset
        uses: alexellis/upload-assets@0.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: "['./openblas.zip']"
